0. key repeat - echo setting ignored || to test - OK
1. cr / nl - change keymap || to test - OK
2. check if cursor ctrl off works correctly on serial read || ok
10. detect CR/LF || to test - OK
4. show serial settings on startup || to test - OK - wrong echo status - fixed || ok
15. display ESC as ~ (for tests) - OK 
13. check if we can optimize low level grph: send two int16 in one set; shouln't wee TFT_CS_HI after transfer? Check other implementations
   - test impl with direct usci registers interaction; if OK - rewrite fill and drawchar - test drawchar - OK - test fill ? - partially
9. try XON/XOFF - test - useless
10. backsp command = cursor left. ESC-K erases line. - test - fixwed - OK  
11 insert inside line - try to erase EOL  - to test
12 ESC[nD - should support this (LEFT N CHARS) - this happen when cursor up (hist retrieve) - to test
13 HW serial custom buffers - to test  - OK
14 - retest ESC (multivalues support )
   
3. last line len - use for scroll last line clr || TEST - fail - rewrite    
5. save settings in eprom

7. esc r ?{3    esc d ?[
8. escp u:   123\n456 -> 14123
//9. test serial flow control: rise host CTS when ready, low when full  (D19 pin for ESP32)
//12. font sz 1 test - unreadable
14. term print unknown chars as [HEX]


~[0;32m

~[K


insert inside line assumes moving the tail to right (!!!) --  or try to erase EOL (!)

enable TX interrupts for SPI :

#define UCxIE         UC0IE
#define UCBzTXIE      UCB0TXIE

UCxIE |= UCBzTXIE;

hack usci_isr_handler.h & c

add 

if( (UCB0CTL0 & SPI_MODE_MASK)!=0 && (UCB0IFG & UCTXIFG) != 0) )
	spi_tx_isr();

void USCIB0_ISR(void)
{
	still_asleep = stay_asleep;

	/* USCI_B0 I2C state change interrupt. */
	if ((UCB0CTL0 & UCMODE_3) == UCMODE_3 && (UCB0IFG & (UCALIFG | UCNACKIFG | UCSTTIFG | UCSTPIFG)) != 0)
		i2c_state_isr(); 
	/* USCI_B0 I2C TX RX interrupt. */
	if ((UCB0CTL0 & UCMODE_3) == UCMODE_3 && (UCB0IFG & (UCTXIFG | UCRXIFG)) != 0)
		i2c_txrx_isr();

	if (still_asleep != stay_asleep)
		__bic_SR_register_on_exit(LPM4_bits);
}


kbd

......
xxxxxx
xoxxox  0.254
xxxxxx
......
xxxxxx
xoxxox
xxxxxx
......
xxxxxx
xoxxox
xxxxxx
......
xxxxxx
xoxxox
xxxxxx
......

